; Basic package information
;     Note: You may use "\n" in the description to create a new line
; 
;     Very important: All information entered in this file is case sensitive.
;     Make sure you write everything correctly! Case sensitive means that
;     "HelloWorld" is not equal "helloworld".
; 
[module]
name    = "Array"
desc    = "Allows the creation and manipulation of pseudo array objects."
author  = "eaxs"
version = "1.0.1"
date    = "08-20-2011"
website = ""


; Module dependencies
;     List the names of the modules which are used by this module
;     You dont have to list K2 and Array here as they are part of the core
; 
[dependencies]
module[] = ""


; Module method list
;     List all public methods including description, except magic functions.
;     Magic functions are: "__construct", "__exec" and "__destruct".
;     Please make sure you have description for each method! You can use "\n"
;     to create a new line.
;
;     Example:
;         name[] = "myMethod"
;         desc[] = "This is my method"
; 
[methods]
name[] = "new"
desc[] = "Creates a new array. If the provided variable name already exists it will be overriden.\nThe index of the array is stored in: <array_name>_idx.\nThe index of an empty array is -1."

name[] = "add"
desc[] = "Adds data to an existing array. You can add up to 10 new elements (ending at option -d9) per call to the array.\nThe data will be appended to the provided array."

name[] = "explode"
desc[] = "Creates an array from a string. The string will be separated by the provided delimeter option.\nNote that the original string will still exist after this operation.\nVery important: The target string or the delimeter must not contain any commas semi-colons or brackets"

name[] = "implode"
desc[] = "Turns an array into a string. The array elements will be &quot;glued&quot; together by the glue option.\nThe original array will still exist after this operation.\nVery important: The glue must not be a comma semi-colon or bracket"

name[] = "each"
desc[] = "Loops through the elements of an array and executes the provided code for each element.\nYou can use %el% as a reference to the currently looped element\n and %i% as a reference to the currrent iterator."

; Module options list
;     For each of your public methods, list the available options
;     including name, description, type, and required.
;     For each method, you have to create a new section.
; 
;     Example:
;         [opt:myMethod]
;         name[] = "-p"
;         desc[] = "This is the -p option and is not optional"
;         type[] = "string"
;         req[]  = "0"
;         ... repeat ...
;     
[opt:new]
name[] = "Array.new"
desc[] = "The variable name of the array"
type[] = "string"
req[]  = "1"

name[] = "-e"
desc[] = "Set this to &quot;1&quot; and the the method will try to find a set of entities that start with this name\nThe found entity names will be instantly appended to the array"
type[] = "string"
req[]  = "0"

[opt:add]
name[] = "Array.add"
desc[] = "The array to which to append the data"
type[] = "object"
req[]  = "1"

name[] = "-d0"
desc[] = "The data to append"
type[] = "mixed"
req[]  = "1"

name[] = "-d1"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d2"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d3"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d4"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d5"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d6"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d7"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d8"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

name[] = "-d9"
desc[] = "More data to append"
type[] = "mixed"
req[]  = "0"

[opt:explode]
name[] = "Array.explode"
desc[] = "The target string"
type[] = "string"
req[]  = "1"

name[] = "-d"
desc[] = "The delimeter string by which to separate"
type[] = "string"
req[]  = "1"

name[] = "-v"
desc[] = "Callback var which holds the result"
type[] = "string"
req[]  = "1"

[opt:implode]
name[] = "Array.implode"
desc[] = "The target array"
type[] = "object"
req[]  = "1"

name[] = "-v"
desc[] = "Callback var which holds the result"
type[] = "string"
req[]  = "1"

name[] = "-g"
desc[] = "The glue by which to concat the array elements"
type[] = "string"
req[]  = "0"

[opt:each]
name[] = "Array.each"
desc[] = "The array to loop"
type[] = "object"
req[]  = "1"

name[] = "-do"
desc[] = "The code to evaluate"
type[] = "string"
req[]  = "1"


; Config variables
;    List all config variables that are used in your module including:
;    name, description and default value
;    You may use "\n" in the description to create a new line
;
[config]
