// Check if we have a valid npc object
#$e# #self# isObject #GetScriptParam(Npc.spawn)# -c "npc" -v "npc_spawn_isnpc";
if [npc_spawn_isnpc == FALSE] "#$e# #self# log \"Npc::spawn: Wrong data type\" -e 1; #@# \"Npc::__destruct{\"";
        
// Validate params
if #StringLength(|#GetScriptParam(-l)|#)# #VOID#;
else "#$e# #self# log \"Npc::spawn: No location specified\" -e 1; #@# \"Npc::__destruct{\"";

#$# npc_spawn_lidx #GetIndexFromName(|#GetScriptParam(-l)|#)#;
if #EntityExists(|#npc_spawn_lidx|#)# #VOID#;
else "#$e# #self# log \"Npc::spawn: Location not found\" -e 1; #@# \"Npc::__destruct{\"";

// Check if optional params are given
if #StringLength(|#GetScriptParam(-m)|#)# #$# #GetScriptParam(Npc.spawn)#"_mode" #GetScriptParam(-m)#;
        
// Set Npc properties
#$# npc_spawn_ispet #|#GetScriptParam(Npc.spawn)|#_isPet#;
#$# npc_spawn_mode #|#GetScriptParam(Npc.spawn)|#_mode#;
#$# npc_spawn_name #|#GetScriptParam(Npc.spawn)|#_name#;
        
// Check if previous incarnation exists which would create a conflict
#$# npc_spawn_prev #|#GetScriptParam(Npc.spawn)|#_previdx#;
if #EntityExists(|#npc_spawn_prev|#)# "#$e# #self# log \"Npc::spawn: Previous incarnation of \"#GetScriptParam(Npc.spawn)#\" still exists - Spawn failed.\" -e 1; #@# \"Npc::__destruct{\"";
if #EntityExists(|#npc_spawn_name|#)# "#$e# #self# log \"Npc::spawn: \"#GetScriptParam(Npc.spawn)#\" already exists - Spawn failed.\" -e 1; #@# \"Npc::__destruct{\"";
        
// Spawn Pet or Npc
if #npc_spawn_ispet# SpawnEntityAtEntity #GetScriptParam(-l)# #|#GetScriptParam(Npc.spawn)|#_type# name #|#GetScriptParam(Npc.spawn)|#_name# team #|#GetScriptParam(Npc.spawn)|#_team#;
else SpawnEntityAtEntity #GetScriptParam(-l)# "NPC_Critter" definition #|#GetScriptParam(Npc.spawn)|#_type# name #|#GetScriptParam(Npc.spawn)|#_name# team #|#GetScriptParam(Npc.spawn)|#_team#;
        
// Register scripts
#$r# #|#GetScriptParam(Npc.spawn)|#_name# "death" #$e#" "#self#" Npc.onDeath "#GetScriptParam(Npc.spawn)#" -k \#GetScriptParam(attackingindex)#\";
        
// Update properties
#$# npc_spawn_n #|#GetScriptParam(Npc.spawn)|#_name#;
#$# #GetScriptParam(Npc.spawn)#"_idx" #GetIndexFromName(|#npc_spawn_n|#)#;
#$# npc_spawn_idx #|#GetScriptParam(Npc.spawn)|#_idx#;
if [npc_spawn_idx >= 1] "#$# #GetScriptParam(Npc.spawn)#\"_isAlive\" #TRUE#; SetToValidPosition #npc_spawn_idx#";

#$# #GetScriptParam(Npc.spawn)#"_posX" #GetPosX(|#npc_spawn_name|#)#;
#$# #GetScriptParam(Npc.spawn)#"_posY" #GetPosY(|#npc_spawn_name|#)#;

// Add to internal array
#$e# #self# Array.add __npc -d0 #GetScriptParam(Npc.spawn)#;

// Register observation script, but only once
if [NPC_OBSERVE_INI == 1] #@# "Npc::__destruct{";
#$# NPC_OBSERVE_INI 1;
#$e# #self# Cron.new "#$e# #self# Npc.observe 1" -t 1 -v npc_spawn_oid;