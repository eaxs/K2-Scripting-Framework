// Check if trigger exists
#$# node_new_eidx #GetIndexFromName(|#GetScriptParam(Node.new)|#)#
#$# node_new_etype #GetType(|#node_new_eidx|#)#

if #EntityExists(|#node_new_eidx|#)# #VOID#;
else "#$e# #self# log \"Node::new: Entity not found\" -e 1; #@# \"Node::__destruct{\"";

if #StringEquals(|#node_new_etype|#,Trigger_Proximity)# #VOID#;
else "#$e# #self# log \"Node::new: Entitiy is not a proximity trigger\" -e 1; #@# \"Node::__destruct{\"";

// Set script options for Npcs
#$# node_new_o #$e#" "#self#" Node.__pet \#GetScriptParam(index)\#";
if #StringLength(|#GetScriptParam(-d)|#)# #$# node_new_o #node_new_o#" -d "#GetScriptParam(-d)#;
if #StringLength(|#GetScriptParam(-t)|#)# #$# node_new_o #node_new_o#" -t "#GetScriptParam(-t)#;

// Register trigger script for NPCs
#$r# #GetScriptParam(Node.new)# enter #$e#" #node_new_o#

// Create node object for pets
#$# #GetScriptParam(Node.new)#"__pet" #GetScriptParam(Node.new)#"__pet"
#$# #GetScriptParam(Node.new)#"__pet_datatype" "node"
#$# #GetScriptParam(Node.new)#"__pet_d" #GetScriptParam(-d)#
#$# #GetScriptParam(Node.new)#"__pet_t" #GetScriptParam(-t)#
#$# #GetScriptParam(Node.new)#"__pet_nd" #GetScriptParam(Node.new)#
#$# #GetScriptParam(Node.new)#"__pet_x" #GetPosX(|#GetScriptParam(Node.new)|#)#
#$# #GetScriptParam(Node.new)#"__pet_y" #GetPosY(|#GetScriptParam(Node.new)|#)#
#$# #GetScriptParam(Node.new)#"__pet_z" #GetPosZ(|#GetScriptParam(Node.new)|#)#

if #StringLength(|#GetScriptParam(-d)|#)# #$# #GetScriptParam(Node.new)#"__pet_dx" #GetPosX(|#GetScriptParam(-d)|#)#
if #StringLength(|#GetScriptParam(-d)|#)# #$# #GetScriptParam(Node.new)#"__pet_dy" #GetPosY(|#GetScriptParam(-d)|#)#
if #StringLength(|#GetScriptParam(-d)|#)# #$# #GetScriptParam(Node.new)#"__pet_dz" #GetPosZ(|#GetScriptParam(-d)|#)#

// Store it
#$# __nodes_idx [__nodes_idx + 1];
#$# __nodes_#__nodes_idx# #GetScriptParam(Node.new)#"__pet";