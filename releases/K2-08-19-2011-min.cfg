if [__K2_INI == 1] "#@# \"K2::__exec{\"";
//****
// * Compiled with "K2framework PHP Compiler" on 08-19-2011 01:01:57
// *
// * @version 1.0.0
// * @date    08-14-2011
// * @author  eaxs
// * @web     https://github.com/eaxs/K2-Scripting-Framework
// *
//****
// * K2
// * The main module. It initiates the framework environment and routes module calls.
// * 
// * @version 1.0.0
// * @date    08-14-2011
// * @author  eaxs
// * @web     
// * 
//****
// * Array
// * Allows the creation and manipulation of pseudo array objects.
// * 
// * @version 1.0.0
// * @date    08-14-2011
// * @author  eaxs
// * @web     
// * 
//****
// * Cron
// * Time-based script scheduler. It allows you to run code periodically.
// * Note that this module overrides the global scripttrigger &quot;activeframe&quot;.
// * Therefore, all timed executions will only work in a running match
// * 
// * @version 1.0.0
// * @date    08-18-2011
// * @author  eaxs
// * @web     
// * 
//****
@K2::__construct{
if [__K2_INI == 1] "#@# \"K2::__exec{\"";
Set $ "Set";
Set $_ "CreateVar";
Set $e "ExecScript";
Set $c "ClientExecScript";
Set $r "RegisterEntityScript";
Set @ "goto";
Set > "SendMessage";
Set < "echo";
#$# NULL "NULL";
#$# VOID "";
#$# TRUE 1;
#$# FALSE 0;
#$# __k2_isObject_lock 0;
#$# __k2_log_lock 0;
#$# __k2_srep_lock 0;
#$# __k2_man_lock 0;
#$# __k2_lsmod_lock 0;
#$# __k2_tracedump_lock 0;
#$# __array_new_lock 0;
#$# __array_add_lock 0;
#$# __array_explode_lock 0;
#$# __array_implode_lock 0;
#$# __array_each_lock 0;
#$# __cron_new_lock 0;
#$# __cron_tab_lock 0;
#$# __cron_rm_lock 0;
#$# __k2modules "K2&Array&Cron";
#$# __k2_K2_methods "isObject,log,srep,man,lsmod,tracedump";
#$# __k2_Array_methods "new,add,explode,implode,each";
#$# __k2_Cron_methods "new,tab,rm";
#$# __k2id 1;
#$# __k2trace "__k2trace";
#$# __k2trace_datatype "array";
#$# __k2trace_idx -1;
#$# cron_id "cron_id";
#$# cron_id_datatype "array";
#$# cron_id_idx 0;
#$# cron_5 "cron_5";
#$# cron_5_datatype "array";
#$# cron_5_idx -1;
#$# cron_10 "cron_10";
#$# cron_10_datatype "array";
#$# cron_10_idx -1;
#$# cron_30 "cron_30";
#$# cron_30_datatype "array";
#$# cron_30_idx -1;
#$# cron_60 "cron_120";
#$# cron_60_datatype "array";
#$# cron_60_idx -1;
#$# cron_120 "cron_120";
#$# cron_120_datatype "array";
#$# cron_120_idx -1;
#$# cron_180 "cron_300";
#$# cron_180_datatype "array";
#$# cron_180_idx -1;
#$# cron_300 "cron_300";
#$# cron_300_datatype "array";
#$# cron_300_idx -1;
#$# cron_5_i 0;
#$# cron_10_i 0;
#$# cron_30_i 0;
#$# cron_60_i 0;
#$# cron_120_i 0;
#$# cron_180_i 0;
#$# cron_300_i 0;
#$# cron_tab_this 0;
#$# CRON_INI 0;
#$# self "K2";
#$# k2_noscript "0";
#$# k2_cfg_debug "0";
#$# k2_cfg_trace "1";
#$# k2_cfg_debug_rlvl "0";
#$# k2_cfg_debug_rcl "-1";
#$# k2_cfg_debug_e_prefix "^rK2^wframework ^rError^w:";
#$# k2_cfg_debug_w_prefix "^rK2^wframework ^yWarning^w:";
#$# k2_cfg_debug_d_prefix "^rK2^wframework ^cDebug^w:";
#$# __man_K2.isObject "^wK2::isObject&Checks if the argument is a K2 object&&^wOptions:&^risObject^607    string    ^555The name of the object to check&^r-v      ^607    string    ^555Callback var which holds the result&^y-c      ^607    string    ^555Compare the found object type against the provided option&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^risObject ^607<string> ^r-v ^607<string> ^y-c ^607<string>";
#$# __man_isObject #__man_K2.isObject#;
#$# __man_K2.log "^wK2::log&Logs a message and displays it in the console or the screen&&^wOptions:&^rlog^607    string    ^555The message string to log&^y-e ^607    int       ^555Flags the message as error&^y-w ^607    int       ^555Flags the message as warning&^y-d ^607    int       ^555Flags the message as debug&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rlog ^607<string> ^y-e ^607<int> ^y-w ^607<int> ^y-d ^607<int>";
#$# __man_log #__man_K2.log#;
#$# __man_K2.srep "^wK2::srep&Replace all occurrences of the search string with the replacement string&&^wOptions:&^rsrep^607    string    ^555The string to search in&^r-v  ^607    string    ^555The callback variable which holds the new string&^r-s  ^607    string    ^555The string to search for&^y-r  ^607    string    ^555The replacement string&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rsrep ^607<string> ^r-v ^607<string> ^r-s ^607<string> ^y-r ^607<string>";
#$# __man_srep #__man_K2.srep#;
#$# __man_K2.man "^wK2::man&Shows a manual page of the requested method or module in the console&&^wOptions:&^rman^607    string    ^555The name of the method or object&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rman ^607<string>";
#$# __man_man #__man_K2.man#;
#$# __man_K2.lsmod "^wK2::lsmod&Lists all compiled K2 framework modules in the console&&^wOptions:&^rlsmod^607    int    ^555Set this to \'1\' in order to show all modules&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rlsmod ^607<int>";
#$# __man_lsmod #__man_K2.lsmod#;
#$# __man_K2.tracedump "^wK2::tracedump&Debugging tool. Dumps the trace log in the console&&^wOptions:&^rtracedump^607    int    ^555Set this to \'1\' in order to dump the log to the console&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rtracedump ^607<int>";
#$# __man_tracedump #__man_K2.tracedump#;
#$# __man_Array.new "^wArray::new&Creates a new array. If the provided variable name already exists it will be overriden.&The index of the array is stored in: <array_name>_idx.&The index of an empty array is -1.&&^wOptions:&^rArray.new^607    string    ^555The variable name of the array&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rArray.new ^607<string>";
#$# __man_Array.add "^wArray::add&Adds data to an existing array. You can add up to 10 new elements ending at option -d9 per call to the array.&The data will be appended to the provided array.&&^wOptions:&^rArray.add^607    object    ^555The array to which to append the data&^r-d0      ^607    mixed     ^555The data to append&^y-d1      ^607    mixed     ^555More data to append&^y-d2      ^607    mixed     ^555More data to append&^y-d3      ^607    mixed     ^555More data to append&^y-d4      ^607    mixed     ^555More data to append&^y-d5      ^607    mixed     ^555More data to append&^y-d6      ^607    mixed     ^555More data to append&^y-d7      ^607    mixed     ^555More data to append&^y-d8      ^607    mixed     ^555More data to append&^y-d9      ^607    mixed     ^555More data to append&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rArray.add ^607<object> ^r-d0 ^607<mixed> ^y-d1 ^607<mixed> ^y-d2 ^607<mixed> ^y-d3 ^607<mixed> ^y-d4 ^607<mixed> ^y-d5 ^607<mixed> ^y-d6 ^607<mixed> ^y-d7 ^607<mixed> ^y-d8 ^607<mixed> ^y-d9 ^607<mixed>";
#$# __man_Array.explode "^wArray::explode&Creates an array from a string. The string will be separated by the provided delimeter option.&Note that the original string will still exist after this operation.&Very important: The target string or the delimeter must not contain any commas semi-colons or brackets&&^wOptions:&^rArray.explode^607    string    ^555The target string&^r-d           ^607    string    ^555The delimeter string by which to separate&^r-v           ^607    string    ^555Callback var which holds the result&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rArray.explode ^607<string> ^r-d ^607<string> ^r-v ^607<string>";
#$# __man_Array.implode "^wArray::implode&Turns an array into a string. The array elements will be \"glued\" together by the glue option.&The original array will still exist after this operation.&Very important: The glue must not be a comma semi-colon or bracket&&^wOptions:&^rArray.implode^607    object    ^555The target array&^r-v           ^607    string    ^555Callback var which holds the result&^y-g           ^607    string    ^555The glue by which to concat the array elements&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rArray.implode ^607<object> ^r-v ^607<string> ^y-g ^607<string>";
#$# __man_Array.each "^wArray::each&Loops through the elements of an array and executes the provided code for each element.&You can use %el% as a reference to the currently looped element& and %i% as a reference to the currrent iterator.&&^wOptions:&^rArray.each^607    object    ^555The array to loop&^r-do       ^607    string    ^555The code to evaluate&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rArray.each ^607<object> ^r-do ^607<string>";
#$# __man_Cron.new "^wCron::new&Adds a new script code to the cron tab.&&^wOptions:&^rnew^607    string    ^555The name of the script to run&^r-v ^607    string    ^555The callback var which will hold the ID of the cron&^r-t ^607    int       ^555The interval in which to run the script.&^555                 5 = Every 5 seconds&^555                 10 = Every 10 seconds&^555                 30 = Every 30 seconds&^555                 60 = Every minute&^555                 120 = Every 2 minutes&^555                 180 = Every 3 minutes&^555                 300 = Every 5 minutes&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rnew ^607<string> ^r-v ^607<string> ^r-t ^607<int>";
#$# __man_Cron.tab "^wCron::tab&This method is private and must not be called. It executes all timed scripts.&&^wOptions:&^rtab^607    int    ^555The tab to run&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rtab ^607<int>";
#$# __man_Cron.rm "^wCron::rm&Removes a script from the cron tab&&^wOptions:&^rrm^607    int    ^555The ID of the cron to remove&&^wLegend:&Options in ^rred ^555are required and must be provided.&Options in ^yyellow ^555are optional and are not required.&&^wUsage:&^500ExecScript ^wK2 ^rrm ^607<int>";
#$# __man_K2 "^wK2 ^555Version: ^w1.0.0^555 | Release date: ^w08-14-2011^555 | Author: ^weaxs&&The main module. It initiates the framework environment and routes module calls.&&^wAvailable Config Vars:&^607self                     ^555The name of this script. Recommended to leave this as it is&^607k2_noscript              ^555Set this to 1 if you want to disable the framework&^607k2_cfg_debug             ^555Enable or disable debugging&^555                         1 = Enabled&^555                         0 = Disabled&^607k2_cfg_trace             ^555Trace K2 framework calls. NOT recommended for production use&^555                         1 = Enabled&^555                         0 = Disabled&^607k2_cfg_debug_rlvl        ^555Reporting level. Only works if debugging is enabled.&^555                         0 = Disabled Recommended for production use&^555                         1 = Show errors in console and screen&^555                         2 = Show errors and warnings in console and screen&^555                         3 = Show all in console and screen&^607k2_cfg_debug_rcl         ^555Set client id to which to send debug screen messages.&^555                         -1 = All clients&^607k2_cfg_debug_e_prefix    ^555Debug error message prefix&^607k2_cfg_debug_w_prefix    ^555Debug warning message prefix&^607k2_cfg_debug_d_prefix    ^555Debug debug message prefix&&To change a variable type: ^500Set ^w<variable> ^607<value>&&^wAvailable Methods:&^607isObject&^607log&^607srep&^607man&^607lsmod&^607tracedump&&For additional help type: ^500ExecScript ^wK2 ^rman ^607<method>&&^wUsage:&^500ExecScript ^wK2 ^r<method or module> ^607<options>";
#$# __man_Array "^wArray ^555Version: ^w1.0.0^555 | Release date: ^w08-14-2011^555 | Author: ^weaxs&&Allows the creation and manipulation of pseudo array objects.&&^wAvailable Methods:&^607new&^607add&^607explode&^607implode&^607each&&For additional help type: ^500ExecScript ^wK2 ^rman ^607Array.<method>&&^wUsage:&^500ExecScript ^wK2 ^rArray.<method> ^607<options>";
#$# __man_Cron "^wCron ^555Version: ^w1.0.0^555 | Release date: ^w08-18-2011^555 | Author: ^weaxs&&Time-based script scheduler. It allows you to run code periodically.&Note that this module overrides the global scripttrigger &amp;quot;activeframe&amp;quot;.&Therefore, all timed executions will only work in a running match&&^wAvailable Methods:&^607new&^607tab&^607rm&&For additional help type: ^500ExecScript ^wK2 ^rman ^607Cron.<method>&&^wUsage:&^500ExecScript ^wK2 ^rCron.<method> ^607<options>";
#@# __destruct{;
@K2::__exec{
if #k2_noscript# #@# "K2::__destruct{";
#$# __k2id [__k2id + 1];
if #StringLength(|#GetScriptParam(isObject)|#)# "#@# \"K2::isObject{\"";
@K2::__exec_skip_isObject{
if #StringLength(|#GetScriptParam(log)|#)# "#@# \"K2::log{\"";
if #StringLength(|#GetScriptParam(srep)|#)# "#@# \"K2::srep{\"";
@K2::__exec_skip_srep{
if #StringLength(|#GetScriptParam(man)|#)# "#@# \"K2::man{\"";
@K2::__exec_skip_man{
if #StringLength(|#GetScriptParam(lsmod)|#)# "#@# \"K2::lsmod{\"";
@K2::__exec_skip_lsmod{
if #StringLength(|#GetScriptParam(tracedump)|#)# "#@# \"K2::tracedump{\"";
@K2::__exec_skip_tracedump{
if #StringLength(|#GetScriptParam(Array.new)|#)# "#@# \"Array::__construct{\"";
@K2::__exec_skip_Array.new{
if #StringLength(|#GetScriptParam(Array.add)|#)# "#@# \"Array::__construct{\"";
@K2::__exec_skip_Array.add{
if #StringLength(|#GetScriptParam(Array.explode)|#)# "#@# \"Array::__construct{\"";
@K2::__exec_skip_Array.explode{
if #StringLength(|#GetScriptParam(Array.implode)|#)# "#@# \"Array::__construct{\"";
@K2::__exec_skip_Array.implode{
if #StringLength(|#GetScriptParam(Array.each)|#)# "#@# \"Array::__construct{\"";
@K2::__exec_skip_Array.each{
if #StringLength(|#GetScriptParam(Cron.new)|#)# "#@# \"Cron::__construct{\"";
@K2::__exec_skip_Cron.new{
if #StringLength(|#GetScriptParam(Cron.tab)|#)# "#@# \"Cron::__construct{\"";
@K2::__exec_skip_Cron.tab{
if #StringLength(|#GetScriptParam(Cron.rm)|#)# "#@# \"Cron::__construct{\"";
@K2::__exec_skip_Cron.rm{
#$e# #self# log "K2::__exec: No method or module has been called" -w 1;
@K2::__exec_skip_log{
#@# "K2::__destruct{";
@K2::isObject{
if [k2_cfg_trace == FALSE] "#@# \"K2::isObject__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200K2::isObject ^204<"#GetScriptParam(isObject)#"> ^200-v ^204<"#GetScriptParam(-v)#"> ^440-c ^204<"#GetScriptParam(-c)#">";
@K2::isObject__exec{
if [__k2_isObject_lock == 1] "#@# \"K2::__exec_skip_K2.isObject{\"";
#$# __k2_isObject_lock 1;
#$# k2_isobj_type #|#GetScriptParam(isObject)|#_datatype#;
if #StringLength(|#GetScriptParam(-v)|#)# #VOID#;
else "#$e# #self# log \"K2::isObject: No callback specified\" -e 1; #@# \"K2::__destruct{\"";
if #StringLength(|#GetScriptParam(-c)|#)# "#$# #GetScriptParam(-v)# #StringEquals(|#GetScriptParam(-c)|#,|#k2_isobj_type|#)#; #@# \"K2::__destruct{\"";
if #StringLength(|#k2_isobj_type|#)# #$# #GetScriptParam(-v)# #TRUE#;
else #$# #GetScriptParam(-v)# #FALSE#;
#@# "K2::__destruct{";
@K2::log{
if [k2_cfg_trace == FALSE] "#@# \"K2::log__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^159Trace: ^g"#__k2trace_idx#" ^wCall ^g"#k2_trace_i#"^w: ^rK2::log ^607<"#GetScriptParam(log)#"> ^y-e ^607<"#GetScriptParam(-e)#"> ^y-w ^607<"#GetScriptParam(-w)#"> ^y-d ^607<"#GetScriptParam(-d)#">";
@K2::log__exec{
if [__k2_log_lock == 1] "#@# \"K2::__exec_skip_K2.log{\"";
#$# __k2_log_lock 1;
if [k2_cfg_debug == FALSE] "#@# \"K2::__destruct{\"";
#$# k2_log_tid [__k2id - 1];
if #StringLength(|#GetScriptParam(-e)|#)# "#@# \"K2::log__e{\"";
if #StringLength(|#GetScriptParam(-w)|#)# "#@# \"K2::log__w{\"";
if #StringLength(|#GetScriptParam(-d)|#)# "#@# \"K2::log__d{\"";
@K2::log__e{
#<# #k2_cfg_debug_e_prefix#" "#GetScriptParam(log)#" ^555(Approx K2 Trace Id: "#k2_log_tid#")";
if [k2_cfg_debug_rlvl >= 1] "#># #k2_cfg_debug_rcl# #k2_cfg_debug_e_prefix#\" \"#GetScriptParam(log)#\" ^555(Approx K2 Trace Id: \"#k2_log_tid#\")\"";
#@# "K2::__destruct{";
@K2::log__w{
#<# #k2_cfg_debug_w_prefix#" "#GetScriptParam(log)#" ^555(Approx K2 Trace Id: "#k2_log_tid#")";
if [k2_cfg_debug_rlvl >= 2] "#># #k2_cfg_debug_rcl# #k2_cfg_debug_w_prefix#\" \"#GetScriptParam(log)#\" ^555(Approx K2 Trace Id: \"#k2_log_tid#\")\"";
#@# "K2::__destruct{";
@K2::log__d{
#<# #k2_cfg_debug_d_prefix#" "#GetScriptParam(log)#" ^555(Approx K2 Trace Id: "#k2_log_tid#")";
if [k2_cfg_debug_rlvl == 3] "#># #k2_cfg_debug_rcl# #k2_cfg_debug_d_prefix#\" \"#GetScriptParam(log)#\" ^555(Approx K2 Trace Id: \"#k2_log_tid#\")\"";
#@# "K2::__destruct{";
#@# "K2::__destruct{";
@K2::srep{
if [k2_cfg_trace == FALSE] "#@# \"K2::srep__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200K2::srep ^204<"#GetScriptParam(srep)#"> ^200-v ^204<"#GetScriptParam(-v)#"> ^200-s ^204<"#GetScriptParam(-s)#"> ^440-r ^204<"#GetScriptParam(-r)#">";
@K2::srep__exec{
if [__k2_srep_lock == 1] "#@# \"K2::__exec_skip_K2.srep{\"";
#$# __k2_srep_lock 1;
if #StringLength(|#GetScriptParam(-v)|#)# #VOID#;
else "#$e# #self# log \"K2::isObject: No callback specified\" -e 1; #@# \"K2::__destruct{\"";
if #StringLength(|#GetScriptParam(-s)|#)# #VOID#;
else "#$e# #self# log \"K2::isObject: No search string specified\" -e 1; #@# \"K2::__destruct{\"";
#$# k2_srep_search #GetScriptParam(-s)#;
#$# k2_srep_search_len #StringLength(|#GetScriptParam(-s)|#)#;
#$# k2_srep_replace "";
#$# k2_srep_result #GetScriptParam(srep)#;
#$# k2_srep_result_len #StringLength(|#GetScriptParam(srep)|#)#;
if #StringLength(|#GetScriptParam(-r)|#)# #$# k2_srep_replace #GetScriptParam(-r)#;
#$# k2_srep_pos_curr 0;
#$# k2_srep_pos_last 0;
@K2::srep__search{
#$# k2_srep_pos_curr #SearchString(|#k2_srep_result|#,|#k2_srep_search|#,|#k2_srep_pos_last|#)#;
if [k2_srep_pos_curr == -1] #@# "K2::srep__callback{";
#$# k2_srep_str1_len [k2_srep_pos_curr - k2_srep_pos_last];
#$# k2_srep_str1 #SubString(|#k2_srep_result|#,0,|#k2_srep_pos_curr|#)#;
#$# k2_srep_pos_last #k2_srep_pos_curr#;
#$# k2_srep_pos_curr [k2_srep_pos_curr + k2_srep_search_len];
#$# k2_srep_str2_len [k2_srep_result_len - k2_srep_pos_curr];
#$# k2_srep_str2 #SubString(|#k2_srep_result|#,|#k2_srep_pos_curr|#,|#k2_srep_str2_len|#)#;
#$# k2_srep_result #k2_srep_str1#""#k2_srep_replace#""#k2_srep_str2#;
#$# k2_srep_result_len #StringLength(|#k2_srep_result|#)#;
if [k2_srep_pos_start < k2_srep_result_len] #@# "K2::srep__search{";
@K2::srep__callback{
#$# #GetScriptParam(-v)# #k2_srep_result#;
#@# "K2::__destruct{";
@K2::man{
@K2::man__exec{
if [__k2_man_lock == 1] "#@# \"K2::__exec_skip_K2.man{\"";
#$# __k2_man_lock 1;
#$# __man #GetScriptParam(man)#;
#$# k2_man_var #__man_|#__man|##;
#$# k2_man_isset #StringLength(|#k2_man_var|#)#;
if [k2_man_isset == FALSE] "#<# \"^rNo manual available for ^607\"#__man#; #@# \"K2::__destruct{\"";
#$e# #self# Array.explode #k2_man_var# -d "&" -v "k2_man_arr";
#$# k2_man_i 0;
clear;
@K2::man__foreach{
#$# k2_man_l #k2_man_arr_|#k2_man_i|##;
#<# "^555* "#k2_man_l#;
#$# k2_man_i [k2_man_i + 1];
if [k2_man_i <= k2_man_arr_idx] "#@# \"K2::man__foreach{\"";
#@# "K2::__destruct{";
@K2::lsmod{
@K2::lsmod__exec{
if [__k2_lsmod_lock == 1] "#@# \"K2::__exec_skip_K2.lsmod{\"";
#$# __k2_lsmod_lock 1;
#$# k2_lsmod_i 0;
#$e# #self# Array.explode #__k2modules# -d "&" -v "k2_lsmod_list";
@K2::lsmod__foreach{
#<# #k2_lsmod_list_|#k2_lsmod_i|##;
#$# k2_lsmod_i [k2_lsmod_i + 1];
if [k2_lsmod_i <= k2_lsmod_list_idx] #@# "K2::lsmod__foreach{";
#$# k2_lsmod_count [__k2modules_idx + 1];
#<# "Modules found: ^g"#k2_lsmod_count#;
#<# "For additional help type: ^500ExecScript ^w"#self#" ^rman ^607<module>";
#@# "K2::__destruct{";
@K2::tracedump{
@K2::tracedump__exec{
if [__k2_tracedump_lock == 1] "#@# \"K2::__exec_skip_K2.tracedump{\"";
#$# __k2_tracedump_lock 1;
#$# k2_tdump_isset_s #StringLength(|#GetScriptParam(-s)|#)#;
#$# k2_tdump_isset_l #StringLength(|#GetScriptParam(-l)|#)#;
#$# k2_tdump_l #GetScriptParam(-l)#;
clear;
#$# k2_tdump_i 0;
#$# k2_tdump_l #__k2trace_idx#;
if [k2_tdump_isset_s > 0] #$# k2_tdump_i #GetScriptParam(-s)#;
if [k2_tdump_isset_l > 0] #$# k2_tdump_l [k2_tdump_i + k2_tdump_l];
@K2::tracedump__foreach{
#$# k2_tdump_i_msg #__k2trace_|#k2_tdump_i|##;
#$# k2_tdump_i_isset #StringLength(|#k2_tdump_i_msg|#)#;
if [k2_tdump_i_isset == FALSE] #<# "^rEnd of trace log";
if [k2_tdump_i_isset == FALSE] #@# "K2::tracedump__end{";
#<# #k2_tdump_i_msg#;
#$# k2_tdump_i [k2_tdump_i + 1];
if [k2_tdump_i <= k2_tdump_l] #@# "K2::tracedump__foreach{";
@K2::tracedump__end{
#$# k2_tdump_count [__k2trace_idx + 1];
#<# "^159Total Traces: ^g"#k2_tdump_count#;
#@# "K2::__destruct{";
@K2::__destruct{
if #StringLength(|#GetScriptParam(isObject)|#)# "#$# __k2_isObject_lock 0";
if #StringLength(|#GetScriptParam(log)|#)# "#$# __k2_log_lock 0";
if #StringLength(|#GetScriptParam(srep)|#)# "#$# __k2_srep_lock 0";
if #StringLength(|#GetScriptParam(man)|#)# "#$# __k2_man_lock 0";
if #StringLength(|#GetScriptParam(lsmod)|#)# "#$# __k2_lsmod_lock 0";
if #StringLength(|#GetScriptParam(tracedump)|#)# "#$# __k2_tracedump_lock 0";
#@# "}";
@Array::__construct{
#@# "Array::__exec{";
@Array::__exec{
if #StringLength(|#GetScriptParam(Array.new)|#)# "#@# \"Array::new{\"";
@Array::__exec_skip_new{
if #StringLength(|#GetScriptParam(Array.add)|#)# "#@# \"Array::add{\"";
@Array::__exec_skip_add{
if #StringLength(|#GetScriptParam(Array.explode)|#)# "#@# \"Array::explode{\"";
@Array::__exec_skip_explode{
if #StringLength(|#GetScriptParam(Array.implode)|#)# "#@# \"Array::implode{\"";
@Array::__exec_skip_implode{
if #StringLength(|#GetScriptParam(Array.each)|#)# "#@# \"Array::each{\"";
@Array::__exec_skip_each{
#$e# #self# log "Array::__exec: No method has been called" -w 1;
#@# "Array::__destruct{";
@Array::new{
if [k2_cfg_trace == FALSE] "#@# \"Array::new__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Array::new ^204<"#GetScriptParam(Array.new)#">";
@Array::new__exec{
if [__array_new_lock == 1] "#@# \"K2::__exec_skip_Array.new{\"";
#$# __array_new_lock 1;
#$# #GetScriptParam(Array.new)# #GetScriptParam(Array.new)#;
#$# #GetScriptParam(Array.new)#"_idx" -1;
#$# #GetScriptParam(Array.new)#"_datatype" "array";
#@# "Array::__destruct{";
@Array::add{
if [k2_cfg_trace == FALSE] "#@# \"Array::add__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Array::add ^204<"#GetScriptParam(Array.add)#"> ^200-d0 ^204<"#GetScriptParam(-d0)#"> ^440-d1 ^204<"#GetScriptParam(-d1)#"> ^440-d2 ^204<"#GetScriptParam(-d2)#"> ^440-d3 ^204<"#GetScriptParam(-d3)#"> ^440-d4 ^204<"#GetScriptParam(-d4)#"> ^440-d5 ^204<"#GetScriptParam(-d5)#"> ^440-d6 ^204<"#GetScriptParam(-d6)#"> ^440-d7 ^204<"#GetScriptParam(-d7)#"> ^440-d8 ^204<"#GetScriptParam(-d8)#"> ^440-d9 ^204<"#GetScriptParam(-d9)#">";
@Array::add__exec{
if [__array_add_lock == 1] "#@# \"K2::__exec_skip_Array.add{\"";
#$# __array_add_lock 1;
#$e# #self# isObject #GetScriptParam(Array.add)# -c "array" -v "array_add_isarray";
if [array_add_isarray == FALSE] "#$e# #self# log \"Array::add: Wrong data type\" -e 1; #@# \"Array::__destruct{\"";
if #StringLength(|#GetScriptParam(-d0)|#)# #VOID#;
else "#$e# #self# log \"Array::add: Empty or missing data argument\" -e 1; #@# \"Array::__destruct{\"";
#$# array_add_i 0;
@Array::add__foreach{
#$# array_add_arg #GetScriptParam(-d|#array_add_i|#)#;
if #StringLength(|#array_add_arg|#)# #VOID#;
else #@# "Array::add__foreach_continue{";
#$# array_add_idx #|#GetScriptParam(Array.add)|#_idx#;
#$# array_add_idx [array_add_idx + 1];
#$# #GetScriptParam(Array.add)#"_idx" #array_add_idx#;
#$# #GetScriptParam(Array.add)#_#array_add_idx# #array_add_arg#;
@Array::add__foreach_continue{
#$# array_add_i [array_add_i + 1];
if [array_add_i < 10] #@# "Array::add__foreach{";
#@# "Array::__destruct{";
@Array::explode{
if [k2_cfg_trace == FALSE] "#@# \"Array::explode__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Array::explode ^204<"#GetScriptParam(Array.explode)#"> ^200-d ^204<"#GetScriptParam(-d)#"> ^200-v ^204<"#GetScriptParam(-v)#">";
@Array::explode__exec{
if [__array_explode_lock == 1] "#@# \"K2::__exec_skip_Array.explode{\"";
#$# __array_explode_lock 1;
if #StringLength(|#GetScriptParam(-d)|#)# #VOID#;
else "#$e# #self# log \"Array::explode: Empty or missing delimeter argument\" -e 1; #@# \"Array::__destruct{\";";
if #StringLength(|#GetScriptParam(-v)|#)# #VOID#;
else "#$e# #self# log \"Array::explode: No callback var specified\" -e 1; #@# \"Array::__destruct{\";";
#$# array_explode_nlen #StringLength(|#GetScriptParam(Array.explode)|#)#;
#$# array_explode_dlen #StringLength(|#GetScriptParam(-d)|#)#;
#$# array_explode_pos_curr 0;
#$# array_explode_pos_last 0;
#$# #GetScriptParam(-v)# #GetScriptParam(-v)#;
#$# #GetScriptParam(-v)#_datatype "array";
#$# #GetScriptParam(-v)#_idx -1;
@Array::explode__foreach{
#$# array_explode_pos_curr #SearchString(|#GetScriptParam(Array.explode)|#,|#GetScriptParam(-d)|#,|#array_explode_pos_last|#)#;
if [array_explode_pos_curr == -1] #@# "Array::explode__end{";
#$# array_explode_str_len [array_explode_pos_curr - array_explode_pos_last];
#$# array_explode_str #SubString(|#GetScriptParam(Array.explode)|#,|#array_explode_pos_last|#,|#array_explode_str_len|#)#;
#$# array_explode_pos_last [array_explode_pos_curr + 1];
#$# array_explode_pos_curr #array_explode_pos_last#;
#$# array_explode_idx #|#GetScriptParam(-v)|#_idx#;
#$# array_explode_idx [array_explode_idx + 1];
#$# #GetScriptParam(-v)#_idx #array_explode_idx#;
#$# #GetScriptParam(-v)#_#array_explode_idx# #array_explode_str#;
if [array_explode_pos_curr <= array_explode_nlen] "#@# \"Array::explode__foreach{\"";
@Array::explode__end{
if [array_explode_pos_curr == array_explode_nlen] "#@# \"Array::__destruct{\"";
#$# array_explode_pos_start #array_explode_pos_last#;
#$# array_explode_pos_end #array_explode_nlen#;
#$# array_explode_idx #|#GetScriptParam(-v)|#_idx#;
#$# array_explode_idx [array_explode_idx + 1];
#$# #GetScriptParam(-v)#_idx #array_explode_idx#;
#$# #GetScriptParam(-v)#_#array_explode_idx# #SubString(|#GetScriptParam(Array.explode)|#,|#array_explode_pos_start|#,|#array_explode_pos_end|#)#;
#@# "Array::__destruct{";
@Array::implode{
if [k2_cfg_trace == FALSE] "#@# \"Array::implode__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Array::implode ^204<"#GetScriptParam(Array.implode)#"> ^200-v ^204<"#GetScriptParam(-v)#"> ^440-g ^204<"#GetScriptParam(-g)#">";
@Array::implode__exec{
if [__array_implode_lock == 1] "#@# \"K2::__exec_skip_Array.implode{\"";
#$# __array_implode_lock 1;
#$e# #self# isObject #GetScriptParam(Array.implode)# -c "array" -v "array_implode_isarray";
if [array_implode_isarray == FALSE] "#$e# #self# log \"Array::implode: Wrong data type\" -e 1; #@# \"Array::__destruct{\"";
if #StringLength(|#GetScriptParam(-v)|#)# #VOID#;
else "#$e# #self# log \"Array::implode: No callback var specified\" -e 1; #@# \"Array::__destruct{\"";
#$e# #self# isObject #GetScriptParam(-v)# -v "array_implode_isobj";
if [array_implode_isobj == TRUE] "#$e# #self# log \"Array::implode: Object to string conversion\" -w 1";
#$# array_implode_g "";
if #StringLength(|#GetScriptParam(-g)|#)# #$# array_implode_g #GetScriptParam(-g)#;
#$# array_implode_str "";
#$# array_implode_a_idx #|#GetScriptParam(Array.implode)|#_idx#;
#$# array_implode_i 0;
if [array_implode_a_idx == -1] #@# "Array::implode__end{";
@Array::implode__foreach{
#$# array_implode_el #|#GetScriptParam(Array.implode)|#_|#array_implode_i|##;
if [array_implode_i == 0] #$# array_implode_str #array_implode_el#;
else #$# array_implode_str #array_implode_str#""#array_implode_g#""#array_implode_el#;
#$# array_implode_i [array_implode_i + 1];
if [array_implode_i <= array_implode_a_idx] #@# "Array::implode__foreach{";
@Array::implode__end{
#$# #GetScriptParam(-v)# #array_implode_str#;
#@# "Array::__destruct{";
@Array::each{
if [k2_cfg_trace == FALSE] "#@# \"Array::each__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Array::each ^204<"#GetScriptParam(Array.each)#"> ^200-do ^204<"#GetScriptParam(-do)#">";
@Array::each__exec{
if [__array_each_lock == 1] "#@# \"K2::__exec_skip_Array.each{\"";
#$# __array_each_lock 1;
#$e# #self# isObject #GetScriptParam(Array.each)# -c "array" -v "array_each_isarray";
if [array_each_isarray == FALSE] "#$e# #self# log \"Array::each: Wrong data type\" -e 1; #@# \"Array::__destruct{\"";
if #StringLength(|#GetScriptParam(-do)|#)# #VOID#;
else "#$e# #self# log \"Array::each: No action specified\" -e 1; #@# \"Array::__destruct{\"";
#$# array_each_i 0;
#$# array_each_idx #|#GetScriptParam(Array.each)|#_idx#;
@Array::each__foreach_array{
#$# array_each_do #GetScriptParam(-do)#;
#$# array_each_el #|#GetScriptParam(Array.each)|#_|#array_each_i|##;
#$e# #self# srep #array_each_do# -s "%el%" -r #array_each_el# -v "array_each_do";
#$e# #self# srep #array_each_do# -s "%i%" -r #array_each_i# -v "array_each_do";
do array_each_do;
#$# array_each_i [array_each_i + 1];
if [array_each_i <= array_each_idx] #@# "Array::each__foreach_array{";
#@# "Array::__destruct{";
@Array::__destruct{
if #StringLength(|#GetScriptParam(Array.new)|#)# "#$# __array_new_lock 0";
if #StringLength(|#GetScriptParam(Array.add)|#)# "#$# __array_add_lock 0";
if #StringLength(|#GetScriptParam(Array.explode)|#)# "#$# __array_explode_lock 0";
if #StringLength(|#GetScriptParam(Array.implode)|#)# "#$# __array_implode_lock 0";
if #StringLength(|#GetScriptParam(Array.each)|#)# "#$# __array_each_lock 0";
#@# };
@Cron::__construct{
if #CRON_INI# #@# "Cron::__exec{";
RegisterGlobalScript -1 "#$e# #self# Cron.tab 1; set" "activeframe";
#$# CRON_INI 1;
#@# "Cron::__exec{";
@Cron::__exec{
if #StringLength(|#GetScriptParam(Cron.new)|#)# "#@# \"Cron::new{\"";
@Cron::__exec_skip_new{
if #StringLength(|#GetScriptParam(Cron.tab)|#)# "#@# \"Cron::tab{\"";
@Cron::__exec_skip_tab{
if #StringLength(|#GetScriptParam(Cron.rm)|#)# "#@# \"Cron::rm{\"";
@Cron::__exec_skip_rm{
#$e# #self# log "Cron::__exec: No method has been called" -w 1;
#@# "Cron::__destruct{";
@Cron::new{
if [k2_cfg_trace == FALSE] "#@# \"Cron::new__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Cron::new ^204<"#GetScriptParam(Cron.new)#"> ^200-v ^204<"#GetScriptParam(-v)#"> ^200-t ^204<"#GetScriptParam(-t)#">";
@Cron::new__exec{
if [__cron_new_lock == 1] "#@# \"K2::__exec_skip_Cron.new{\"";
#$# __cron_new_lock 1;
if #StringLength(|#GetScriptParam(-v)|#)# #VOID#;
else "#$e# #self# log \"Cron::new: No callback var specified\" -e 1; #@# \"Cron::__destruct{\"";
#$# k2_cron_new_isvalid 0;
#$# k2_cron_new_t #GetScriptParam(-t)#;
if [k2_cron_new_t == 5] "#$# k2_cron_new_isvalid 1";
if [k2_cron_new_t == 10] "#$# k2_cron_new_isvalid 1";
if [k2_cron_new_t == 30] "#$# k2_cron_new_isvalid 1";
if [k2_cron_new_t == 60] "#$# k2_cron_new_isvalid 1";
if [k2_cron_new_t == 120] "#$# k2_cron_new_isvalid 1";
if [k2_cron_new_t == 180] "#$# k2_cron_new_isvalid 1";
if [k2_cron_new_t == 300] "#$# k2_cron_new_isvalid 1";
if #k2_cron_new_isvalid# #VOID#;
else "#$e# #self# log \"Cron::new: Invalid interval specified\" -e 1; #@# \"Cron::__destruct{\"";
#$# k2_cron_new_arr "cron_"#k2_cron_new_t#;
#$# k2_cron_new_arr_idx #|#k2_cron_new_arr|#_idx#;
#$# k2_cron_new_arr_idx [k2_cron_new_arr_idx + 1];
#$# cron_#k2_cron_new_t#_idx #k2_cron_new_arr_idx#;
#$# cron_#k2_cron_new_t#_#k2_cron_new_arr_idx# #GetScriptParam(Cron.new)#;
#$# cron_id_idx [cron_id_idx + 1];
#$# cron_id_#cron_id_idx# cron_#k2_cron_new_t#_#k2_cron_new_arr_idx#;
#$# #GetScriptParam(-v)# #cron_id_idx#;
#@# "Cron::__destruct{";
@Cron::tab{
@Cron::tab__exec{
if [__cron_tab_lock == 1] "#@# \"K2::__exec_skip_Cron.tab{\"";
#$# __cron_tab_lock 1;
#$# cron_5_i [cron_5_i + 1];
#$# cron_10_i [cron_10_i + 1];
#$# cron_30_i [cron_30_i + 1];
#$# cron_60_i [cron_60_i + 1];
#$# cron_120_i [cron_120_i + 1];
#$# cron_180_i [cron_180_i + 1];
#$# cron_300_i [cron_300_i + 1];
if [cron_5_i == 300] "#@# \"Cron::tab__run_5{\";";
if [cron_10_i == 600] "#@# \"Cron::tab__run_10{\";";
if [cron_30_i == 1800] "#@# \"Cron::tab__run_30{\";";
if [cron_60_i == 3600] "#@# \"Cron::tab__run_60{\";";
if [cron_120_i == 7200] "#@# \"Cron::tab__run_120{\";";
if [cron_180_i == 10800] "#@# \"Cron::tab__run_180{\";";
if [cron_300_i == 18000] "#@# \"Cron::tab__run_300{\";";
#@# "Cron::__destruct{";
@Cron::tab__run_5{
#$# cron_5_i 0;
#$# cron_tab_this 5;
#@# "Cron::tab__run{";
@Cron::tab__run_10{
#$# cron_10_i 0;
#$# cron_tab_this 10;
#@# "Cron::tab__run{";
@Cron::tab__run_30{
#$# cron_30_i 0;
#$# cron_tab_this 30;
#@# "Cron::tab__run{";
@Cron::tab__run_60{
#$# cron_60_i 0;
#$# cron_tab_this 60;
#@# "Cron::tab__run{";
@Cron::tab__run_120{
#$# cron_120_i 0;
#$# cron_tab_this 120;
#@# "Cron::tab__run{";
@Cron::tab__run_180{
#$# cron_180_i 0;
#$# cron_tab_this 180;
#@# "Cron::tab__run{";
@Cron::tab__run_300{
#$# cron_300_i 0;
#$# cron_tab_this 300;
#@# "Cron::tab__run{";
@Cron::tab__run{
#$# k2_cron_tab_arr "cron_"#cron_tab_this#;
#$# k2_cron_tab_max #cron_|#cron_tab_this|#_idx#;
if [k2_cron_tab_max >= 0] #VOID#;
else #@# "K2::cron__next{";
#$# k2_cron_tab_i 0;
@K2::cron__foreach{
#$# k2_cron_tab_code #|#k2_cron_tab_arr|#_|#k2_cron_tab_i|##;
if #StringLength(|#k2_cron_tab_code|#)# do k2_cron_tab_code;
#$# k2_cron_tab_i [k2_cron_tab_i + 1];
if [k2_cron_tab_i <= k2_cron_tab_max] #@# "K2::cron__foreach{";
@K2::cron__next{
if [cron_tab_this == 5 & cron_10_i == 600] #@# "Cron::tab__run_10{";
if [cron_tab_this == 10 & cron_30_i == 1800] #@# "Cron::tab__run_30{";
if [cron_tab_this == 30 & cron_60_i == 3600] #@# "Cron::tab__run_60{";
if [cron_tab_this == 60 & cron_120_i == 7200] #@# "Cron::tab__run_120{";
if [cron_tab_this == 120 & cron_180_i == 10800] #@# "Cron::tab__run_180{";
if [cron_tab_this == 60 & cron_180_i == 10800] #@# "Cron::tab__run_180{";
if [cron_tab_this == 180 & cron_300_i == 18000] #@# "Cron::tab__run_300{";
if [cron_tab_this == 60 & cron_300_i == 18000] #@# "Cron::tab__run_300{";
#@# "Cron::__destruct{";
@Cron::rm{
if [k2_cfg_trace == FALSE] "#@# \"Cron::rm__exec{\"";
#$# k2_trace_i #__k2id#;
#$# __k2trace_idx [__k2trace_idx + 1];
#$# __k2trace_#__k2trace_idx# "^225Trace: ^030"#__k2trace_idx#" ^555Call ^030"#k2_trace_i#"^555: ^200Cron::rm ^204<"#GetScriptParam(Cron.rm)#">";
@Cron::rm__exec{
if [__cron_rm_lock == 1] "#@# \"K2::__exec_skip_Cron.rm{\"";
#$# __cron_rm_lock 1;
#$# k2_cron_rm_ridx #cron_id_|#GetScriptParam(Cron.rm)|##;
if #StringLength(|#k2_cron_rm_ridx|#)# #VOID#;
else "#$e# #self# log \"Cron::rm: Cron not found\" -w 1;";
#$# #k2_cron_rm_ridx# "";
#@# "Cron::__destruct{";
@Cron::__destruct{
if #StringLength(|#GetScriptParam(Cron.new)|#)# "#$# __cron_new_lock 0";
if #StringLength(|#GetScriptParam(Cron.tab)|#)# "#$# __cron_tab_lock 0";
if #StringLength(|#GetScriptParam(Cron.rm)|#)# "#$# __cron_rm_lock 0";
#@# };
@__destruct{
#$# __K2_INI 1;
#@# "}";
@}